@using WebInterface.Models.CombinedModels
@model GuestCodeWithModel<DishTypeViewModel>

@{
    ViewData["Title"] = "Drinks";
    Layout = "~/Views/Shared/_MenuCardLayout.cshtml";
}

@{
    int quantity = 0;
}



<h2>Drinks</h2>
<hr />

<link href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
<script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js"></script>
<script src="//code.jquery.com/jquery-1.11.1.min.js"></script>

<style>

    input[type=number]::-webkit-inner-spin-button {
        opacity: 1
    }

    .SubDrink {
        float: left;
        width: 45%;
    }

    .customize {
        float: left;
        width: 20%;
    }

    .Price {
        float: left;
        width: 15%;
    }

    .quantity {
        float: left;
        width: 20%;
    }

    #theInput {
        width: 20%;
    }

    .Quantity {
        float: left;
        width: 20%;
    }
</style>

<form asp-action="Drinks">

    <input type="hidden" name="GuestCode" value="@Model.GuestCode" />

    <div class="Drinks">

        @if (Model.Model.DishTypes.Count() <= 0)
        {
            <div>No Drinks to display</div>
        }

        else if (Model.Model.DishTypes.Count() > 0)
        {
            if (Model.Model.SubDishTypes.Count() == 0)
            {
                @for (int j = 0; j < Model.Model.DishTypes.Count(); j++)
                {
                    if (Model.Model.DishTypes[j].SubDishType == null)
                    {
                        <div class="SubDrink">@Model.Model.DishTypes[j].Name</div>
                        <div class="customize">[Customize]</div>
                        <div class="Price">&euro; @Model.Model.DishTypes[j].Price</div>

                        if (Model.Model.quantityDictionary.ContainsKey(Model.Model.DishTypes[j]))
                        {
                            quantity = Model.Model.quantityDictionary[Model.Model.DishTypes[j]];
                        }

                        <div class="Quantity" id="@Model.Model.DishTypes[j].Name"><input type="number" min="0" value="@quantity" name="@Model.Model.DishTypes[j].Name"></div>

                    }
                }

            }

            else if (Model.Model.SubDishTypes.Count() > 0)
            {
                @for (int i = 0; i < Model.Model.SubDishTypes.Count(); i++)
                {
                    <h3>@Model.Model.SubDishTypes[i].SubType</h3>

                    @for (int j = 0; j < Model.Model.DishTypes.Count(); j++)
                    {
                        if (Model.Model.DishTypes[j].SubDishType != null)
                        {
                            if (Model.Model.DishTypes[j].SubDishType.SubType == Model.Model.SubDishTypes[i].SubType)
                            {
                                <div class="SubDrink">@Model.Model.DishTypes[j].Name</div>
                                <div class="customize">[Customize]</div>
                                <div class="Price">&euro; @Model.Model.DishTypes[j].Price</div>
                                if (Model.Model.quantityDictionary.ContainsKey(Model.Model.DishTypes[j]))
                                {
                                    quantity = Model.Model.quantityDictionary[Model.Model.DishTypes[j]];
                                }
                                <div class="Quantity" id="@Model.Model.DishTypes[j].Name"><input type="number" min="0" value="@quantity" name="@Model.Model.DishTypes[j].Name"></div>
                            }

                        }
                    }
                }



                @for (int j = 0; j < Model.Model.DishTypes.Count(); j++)
                {

                    if (Model.Model.DishTypes[j].SubDishType == null)
                    {
                        <h3> Others </h3>
                        break;

                    }
                }

                @for (int j = 0; j < Model.Model.DishTypes.Count(); j++)
                {

                    if (Model.Model.DishTypes[j].SubDishType == null)
                    {
                        <div>@Model.Model.DishTypes[j].Name</div>
                    }
                }

            }


        }

    </div>

    <hr />

    <br />
    <br />

    <input type="button" value="Go back to home" onclick="location.href='@Url.Action("Index", "MenuCard", new { GuestCode = Model.GuestCode})'" />

    <button type="submit" name="orderName" value="OrderOverview">Order Overview</button>
    <button type="submit" name="proceedName" value="Starters">Proceed to Starters</button>


    @*<input type="submit" name="orderName" value="OrderOverview" onclick="location.href='@Url.Action("OrderOverview", "MenuCard",new { GuestCode = Model.GuestCode} )'" />
    <input type="submit" name="proceedName" value="Starters" onclick="location.href='@Url.Action("Starters", "MenuCard", new { GuestCode = Model.GuestCode} )'" />*@

</form>
