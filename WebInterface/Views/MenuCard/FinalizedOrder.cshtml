@using WebInterface.Models.CombinedModels;

@model GuestCodeWithModel<OrderDishTypeViewModel>
@{
    ViewData["Title"] = "FinalizedOrder";
    Layout = "~/Views/Shared/_MenuCardLayout.cshtml";

}

<hr />

<h2>FinalizedOrder</h2>

<hr />

<style>

    input[type=number]::-webkit-inner-spin-button {
        opacity: 1
    }

    .uniqueDishes {
        float: left;
        width: 40%;
    }

    .customize {
        float: left;
        width: 30%;
    }

    .Price {
        float: left;
        width: 20%;
    }

    .quantity {
        float: left;
        width: 40%;
    }

    #theInput {
        width: 20%;
    }

    .Quantity {
        float: left;
        width: 20%;
    }

    #totalPrice {
        float: left;
        width: 40%;
    }

    #totalPriceDisplay {
        float: left;
        width: 20%;
    }
</style>

<div class="OrderOverview">

    @{
        var drinks = Model.Model.orderDishes.Where(x => x.Course.Course == CourseType.DRINK);
        var uniqueDrinks = Model.Model.orderDishes.Where(x => x.Course.Course == CourseType.DRINK).GroupBy(x => x.Course.Name).Select(x => x.LastOrDefault());
        var starters = Model.Model.orderDishes.Where(x => x.Course.Course == CourseType.STARTER);
        var uniqueStarters = Model.Model.orderDishes.Where(x => x.Course.Course == CourseType.STARTER).GroupBy(x => x.Course.Name).Select(x => x.LastOrDefault());
        var mains = Model.Model.orderDishes.Where(x => x.Course.Course == CourseType.MAINCOURSE);
        var uniqueMains = Model.Model.orderDishes.Where(x => x.Course.Course == CourseType.MAINCOURSE).GroupBy(x => x.Course.Name).Select(x => x.LastOrDefault());
        var desserts = Model.Model.orderDishes.Where(x => x.Course.Course == CourseType.DESSERT);
        var uniqueDesserts = Model.Model.orderDishes.Where(x => x.Course.Course == CourseType.DESSERT).GroupBy(x => x.Course.Name).Select(x => x.LastOrDefault());

        double totalPrice = 0;
    }

    @if (Model.Model.orderDishes.Count <= 0)
    {
        <div>No Finalized orders to display</div>
    }

    else if (Model.Model.orderDishes.Count > 0)
    {
        if (drinks.Count() > 0)
        {

            int orderQuantity = 0;
            double price = 0;
            <div><h3>Drinks</h3></div>
            foreach (var uniqueDrink in uniqueDrinks)
            {
                <div class="uniqueDishes">@uniqueDrink.Course.Name</div>

                orderQuantity = drinks.Where(x => x.Course.Name == uniqueDrink.Course.Name).Count();

                if (uniqueDrink.Course.Price.HasValue)
                {
                    price = orderQuantity * uniqueDrink.Course.Price.Value;
                } else
                {
                    price = 0;
                }
                totalPrice = totalPrice + price;
                <div class="Price">&euro; @price</div>
                <div class="quantity">@orderQuantity</div>
                orderQuantity = 0;
                price = 0;
            }
            <hr />
        }




        if (starters.Count() > 0)
        {
            int orderQuantity = 0;
            double price = 0;
            <div><h3>Starters</h3></div>
            foreach(var uniqueStarter in uniqueStarters)
            {
                <div class="uniqueDishes">@uniqueStarter.Course.Name</div>

                orderQuantity = starters.Where(x => x.Course.Name == uniqueStarter.Course.Name).Count();

                if (uniqueStarter.Course.Price.HasValue)
                {
                    price = orderQuantity * (double)uniqueStarter.Course.Price;
                }
                else
                {
                    price = 0;
                }
                totalPrice = totalPrice + price;
                <div class="Price">&euro; @price</div>
                <div class="quantity">@orderQuantity</div>
                orderQuantity = 0;
                price = 0;
            }
            <hr />

        }



        if (mains.Count() > 0)
        {
            int orderQuantity = 0;
            double price = 0;
            <div><h3>Mains</h3></div>
            foreach(var uniqueMain in uniqueMains)
            {
                <div class="uniqueDishes">@uniqueMain.Course.Name</div>

                orderQuantity = mains.Where(x => x.Course.Name == uniqueMain.Course.Name).Count();

                if (uniqueMain.Course.Price.HasValue)
                {
                    price = orderQuantity * uniqueMain.Course.Price.Value;
                } else
                {
                    price = 0;
                }
                totalPrice = totalPrice + price;
                <div class="Price">&euro; @price</div>
                <div class="quantity">@orderQuantity</div>
                orderQuantity = 0;
                price = 0;
            }
            <hr />

        }



        if (desserts.Count() > 0)
        {
            int orderQuantity = 0;
            double price = 0;
            <div><h3>Desserts</h3></div>
            foreach(var uniqueDessert in uniqueDesserts)
            {
                <div class="uniqueDishes">@uniqueDessert.Course.Name</div>

                orderQuantity = desserts.Where(x => x.Course.Name == uniqueDessert.Course.Name).Count();

                if (uniqueDessert.Course.Price.HasValue)
                {
                    price = orderQuantity * uniqueDessert.Course.Price.Value;
                }
                else
                {
                    price = 0;
                }
                totalPrice = totalPrice + price;
                <div class="Price">&euro; @price</div>
                <div class="quantity">@orderQuantity</div>
                orderQuantity = 0;
                price = 0;
            }
            <hr />
        }

        <hr />
        <div id="totalPrice"><h4><b>Total Pice</b></h4></div>
        <div id="totalPriceDisplay">&euro; @totalPrice</div>
    }


</div>

<br />
<br />








