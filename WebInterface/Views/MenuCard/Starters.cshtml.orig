@using WebInterface.Models.CombinedModels

@model GuestCodeWithModel<DishTypeViewModel>


@{
    ViewData["Title"] = "Starters";
    Layout = "~/Views/Shared/_MenuCardLayout.cshtml";
}

<h2>Starters</h2>

<hr />

<style>

    .SubDrink {
        float: left;
        width: 50%;
    }

    .customize {
        float: left;
        width: 30%;
    }


    .quantity {
        float: left;
        width: 20%;
    }

    #theInput {
        width: 20%;
    }
</style>



<<<<<<< Updated upstream

@*<div class="Starters">
=======
<div class="Starters">
>>>>>>> Stashed changes

    @if (Model.Model.DishTypes.Count() == 0 || Model.Model.DishTypes.Count() < 0)
    {
        <div>No Starters to display</div>
    }

    else if (Model.Model.DishTypes.Count() > 0)
    {
        if (Model.Model.SubDishTypes.Count() == 0)
        {

            @for (int j = 0; j < Model.Model.DishTypes.Count(); j++)
            {
                if (Model.Model.DishTypes[j].SubDishType == null)
                {
                    <div>@Model.Model.DishTypes[j].Name</div>
                }
            }

        }

        else if (Model.Model.SubDishTypes.Count() > 0)
        {
            @for (int i = 0; i < Model.Model.SubDishTypes.Count(); i++)
            {
                <h3>@Model.Model.SubDishTypes[i].SubType</h3>

                @for (int j = 0; j < Model.Model.DishTypes.Count(); j++)
                {
                    if (Model.Model.DishTypes[j].SubDishType != null)
                    {
                        if (Model.Model.DishTypes[j].SubDishType.SubType == Model.Model.SubDishTypes[i].SubType)
                        {
                            <div>@Model.Model.DishTypes[j].Name</div>
                        }

                    }
                }
            }



            @for (int j = 0; j < Model.Model.DishTypes.Count(); j++)
            {

                if (Model.Model.DishTypes[j].SubDishType == null)
                {
                    <h3> Others </h3>
                    break;

                }
            }

            @for (int j = 0; j < Model.Model.DishTypes.Count(); j++)
            {

                if (Model.Model.DishTypes[j].SubDishType == null)
                {
                    <div>@Model.Model.DishTypes[j].Name</div>
                }
            }

        }


    }

</div>

<hr />


<input type="button" value="Go Back to Drinks" onclick="location.href='@Url.Action("Drinks", "MenuCard", new { GuestCode = Model.GuestCode} )'" />


<<<<<<< Updated upstream
<input type="button" value="Procced To Main Course" onclick="location.href='@Url.Action("Mains", "MenuCard", new { GuestCode = Model.GuestCode} )'" />*@
=======
<input type="button" value="Proceed to Main Course" onclick="location.href='@Url.Action("Mains", "MenuCard", new { GuestCode = Model.GuestCode} )'" />
>>>>>>> Stashed changes


<input type="button" value="Place Order" onclick="location.href='@Url.Action("OrderOverview", "MenuCard", new { GuestCode = Model.GuestCode} )'" />






