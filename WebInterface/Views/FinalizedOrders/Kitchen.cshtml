@model List<Order>
@*@model IEnumerable<Order>*@

@{
    ViewData["Title"] = "Kitchen";
}


<style>

    hr {
        border: 1px solid #000;
    }

</style>

<h2>All Kitchen Orders <button onclick="printPDF('finalizedOrders')">Print all Orders</button></h2>


<hr />



<div id="finalizedOrders">

    @if (Model.Count == 0)
    {
        <div> No Finalized orders to Display</div>
    }

    else
    {
        @foreach (Order item in Model)
        {

            var allStarters = item.Finalized.Where(x => x.Course.Course == CourseType.STARTER);
            var allMains = item.Finalized.Where(x => x.Course.Course == CourseType.MAINCOURSE);
            var allDesserts = item.Finalized.Where(x => x.Course.Course == CourseType.DESSERT);




            @if (item.Finalized != null)
            {
                @foreach (var a in item.Finalized)
                {
                    if (a.Course.Course != CourseType.DRINK)
                    {
                        <h2>Order no: @item.OrderID</h2>
                        break;
                    }
                }


                @if (allStarters.Count() > 0)
                {
                    <h3>Starters</h3>

                    Dictionary<Dish, int> output = new Dictionary<Dish, int>();


                    var uniqueStarters = allStarters.GroupBy(x => x.Course.Name).Select(y => new { type = y.FirstOrDefault(), quantity = y.Count() });

                    @foreach (var items in uniqueStarters)
                    {
                        output[items.type] = items.quantity;
                    }

                    @foreach (var dic in output)
                    {
                        <div>@dic.Key.Course.Name --> @dic.Value</div>

                    }


                }


                @if (allMains.Count() > 0)
                {
                    <h3>Mains</h3>

                    Dictionary<Dish, int> output = new Dictionary<Dish, int>();


                    var uniqueMains = allMains.GroupBy(x => x.Course.Name).Select(y => new { type = y.FirstOrDefault(), quantity = y.Count() });

                    @foreach (var items in uniqueMains)
                    {
                        output[items.type] = items.quantity;
                    }

                    @foreach (var dic in output)
                    {
                        <div>@dic.Key.Course.Name --> @dic.Value</div>

                    }

                }

                @if (allDesserts.Count() > 0)
                {
                    <h3>Desserts</h3>

                    Dictionary<Dish, int> output = new Dictionary<Dish, int>();


                    var uniqueDesserts = allDesserts.GroupBy(x => x.Course.Name).Select(y => new { type = y.FirstOrDefault(), quantity = y.Count() });

                    @foreach (var items in uniqueDesserts)
                    {
                        output[items.type] = items.quantity;
                    }

                    @foreach (var dic in output)
                    {
                        <div>@dic.Key.Course.Name --> @dic.Value</div>

                    }
                }


                @foreach (var a in item.Finalized)
                {
                    if (a.Course.Course != CourseType.DRINK)
                    {
                        <hr />
                        break;
                    }
                }
            }
        }
    }
</div>


<button onclick="printPDF('finalizedOrders')">Print all Orders</button>


<br />
<br />

<a class="btn btn-default" asp-action="Index">Back to Index</a>



@section Scripts {
    <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.10.16/js/jquery.dataTables.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.2/jspdf.min.js"></script>

    <script>

    </script>

    <script>
        function printPDF(elem) {
            var mywindow = window.open('', 'PRINT', 'height=400,width=600');


            mywindow.document.write(document.getElementById(elem).innerHTML);


            mywindow.document.close(); // necessary for IE >= 10
            mywindow.focus(); // necessary for IE >= 10*/

            mywindow.print();
            mywindow.close();

            return true;
        }
    </script>
}

